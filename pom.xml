<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd ">

  <modelVersion>4.0.0</modelVersion>
  <artifactId>assertj-core</artifactId>
  <version>3.3.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <name>AssertJ fluent assertions</name>
  <description>Rich and fluent assertions for testing for Java</description>
  <inceptionYear>2014</inceptionYear>
  <parent>
    <groupId>org.assertj</groupId>
    <artifactId>assertj-parent-pom</artifactId>
    <version>1.3.6</version>
  </parent>
  <mailingLists>
    <mailingList>
      <name>AssertJ Group</name>
      <post>http://groups.google.com/group/assertj</post>
      <subscribe>http://groups.google.com/group/assertj</subscribe>
      <unsubscribe>http://groups.google.com/group/assertj</unsubscribe>
    </mailingList>
  </mailingLists>
  <scm>
    <developerConnection>scm:git:git@github.com:joel-costigliola/assertj-core.git</developerConnection>
    <connection>scm:git:git@github.com:joel-costigliola/assertj-core.git</connection>
    <url>git@github.com:joel-costigliola/assertj-core</url>
    <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>github</system>
    <url>https://github.com/joel-costigliola/assertj-core/issues</url>
  </issueManagement>
  <properties>
    <additionalparam>-Xdoclint:none</additionalparam>
    <powermock.version>1.6.2</powermock.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>3.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>5.0.3</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.3.1</version>
      <scope>test</scope>
    </dependency>
    <!--
      NEEDED! Unlike File, a Path is not linked to the JRE's filesystem.

      In order to accurately test assertions, we need a decent JSR 203 implementation
      which lets us test our assertions. Right now, this is memoryfilesystem
      (https://github.com/marschall/memoryfilesystem).

      Another choice would be jimfs from Google (https://github.com/google/jimfs),
      but its support for reading/writing file attributes is not as complete as that
      of memoryfilesystem's.
    -->
    <dependency>
      <groupId>com.github.marschall</groupId>
      <artifactId>memoryfilesystem</artifactId>
      <version>0.6.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.14</version>
        <configuration>
          <!-- No need to check. There is also no Java 8 signature artifact -->
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <!-- Template location -->
          <header>licence-header.txt</header>
          <properties>
            <!-- Values to be substituted in template -->
            <inceptionYear>2012</inceptionYear>
            <currentYear>2015</currentYear>
          </properties>
          <strictCheck>true</strictCheck>
          <includes>
            <include>src/main/**/*.java</include>
          </includes>
          <excludes>
            <exclude>src/ide-support/**/*.*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.5.3</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Export-Package>
              !org.assertj.core.internal,
              !org.assertj.core.util,
              org.assertj.core.*
            </Export-Package>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
            <_removeheaders>Bnd-LastModified</_removeheaders>
          </instructions>
        </configuration>
      </plugin>
      <!-- generate jacoco report -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>CLASS</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.99</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- to get jacoco report we need to set argLine in surefire, without this snippet the jacoco argLine is lost -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${argLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>jarjar-maven-plugin</artifactId>
        <version>1.9</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jarjar</goal>
            </goals>
            <configuration>
              <!-- TODO add ASM / or get rid of CGLIB -->
              <includes>
                <include>cglib:cglib</include>
                <include>org.ow2.asm:asm</include>
              </includes>
              <rules>
                <rule>
                  <pattern>org.objectweb.asm.**</pattern>
                  <result>org.assertj.core.internal.asm.@1</result>
                </rule>
                <rule>
                  <pattern>net.sf.cglib.**</pattern>
                  <result>org.assertj.core.internal.cglib.@1</result>
                </rule>
                <keep>
                  <pattern>org.assertj.core.**</pattern>
                </keep>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <!-- (1) CSS file location -->
          <stylesheetfile>src/main/javadoc/assertj-javadoc.css</stylesheetfile>
          <!-- (2) Highlight Javascript file -->
          <top><![CDATA[
            <script src="http://cdn.jsdelivr.net/highlight.js/8.6/highlight.min.js"></script>
          ]]></top>
          <!-- init Highlight -->
          <footer><![CDATA[
            <script type="text/javascript">
              hljs.initHighlightingOnLoad();
            </script>
          ]]></footer>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <versionRange>[2.6,)</versionRange>
                    <goals>
                      <goal>format</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
